name: ci

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"

env:
  IMAGE_NAME: "http_helloworld"

jobs:
  build-and-test:
    name: "Build and test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Build
        run: go build -v ./...
      - name: Test
        run: go test -v ./...

  docker-publishing:
    needs: build-and-test
    if: github.event.push.branch != 'main'
    name: "Docker publishing"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2  

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: guionardo/${{ env.IMAGE_NAME }}

      - name: Set up Docker Buildx
        if: github.event_name != 'pull_request'
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: guionardo
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Build and push http microservice
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: .
          file: ./Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
